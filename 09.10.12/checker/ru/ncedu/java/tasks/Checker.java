package ru.ncedu.java.tasks;

import java.util.List;
import java.util.regex.Pattern;

/**
 * ЦЕЛЬ ЗАДАЧИ - разобраться с регулярными выражениями и классами пакета java.util.regex. 
 * 
 * ЗАДАНИЕ
 * Реализовать проверку корректности имен в языке PL/SQL, 
 * проверку корректности  e-mail-ов,
 * нахождение соответствий (matches) в строке.
 * 
 * @author Alexey Vasiliev 
 */
public interface Checker {
	
	/**
	 * Имена переменных в PL/SQL должны начинаться буквой латинского алфавита. 
	 * Промежуточными символами могут быть буквы латинского алфавита, цифры, 
	 *  знак подчеркивания ("_"), или знак доллара ("$").
	 * Длина имени не должна превышать 30 символов.  
	 * @return шаблон для имен в PL/SQL.
	*/
	public Pattern getPLSQLNamesPattern();
	
	/**
	 * На web-странице содержащиеся URL описываются тегом <a href = ... > (или <a href = ... />).
	 * Имя тега и атрибута href не чувствительны к регистру; 
	 * между символами меньше, именем тега, названием атрибута, знаком равно и символом больше 
	 * могут быть следующие разделители: 
	 * табуляция, перевод строки, возврат каретки, перевод формата, пробел. 
	 * @return шаблон для выделения содержащихся на HTML-странице URL-ов.
	 * */
	public Pattern getHrefURLPattern();
	
	
	/**
	 * e-mail имеет формат: <аккаунт>@<домен>.<домен_первого_уровня>
	 * <Аккаунт> должен быть длиной не более 22 символов и состоять из латинских букв, цифр, 
	 * знаков подчеркивания ("_"), точки (".") или дефис ("-"). 
	 * Аккаунт не может начинаться с символов дефис ("-"), точка (".") или знак подчеркивания ("_").
	 * Аккаунт не может заканчиваться символом дефис ("-"), точка (".") или знак подчеркивания ("_"). 
	 * <Домен> может быть доменом любого уровня, каждый уровень отделяется от другого символом точка (".").
	 * Название домена каждого уровня должно состоять более чем из одного символа, 
	 * начинаться и заканчиваться буквой латинского алфавита или цифрой. 
	 * Промежуточными символами могут быть буквы латинского алфавита, цифры или дефис. 
	 * <Домен первого уровня> - допустим один из следующих: .ru, .com, .net, .org.
	 * @return шаблон для e-mail адресов.
	 * */
	public Pattern getEMailPattern();
	/**
	 * Метод проверяет соответствие {@link String}inputString шаблону {@link Pattern}pattern.
	 * @param inputString - строка, подлежащая проверке.
	 * @param pattern - шаблон.
	 * @throws IllegalArgumentException , если один из аргументов null.
	 * @return true, если inputString и pattern являются null-ами, или inputString соответствует шаблону pattern.
	 * */
	public boolean checkAccordance(String inputString, Pattern pattern) throws IllegalArgumentException;
	
}