package ru.ncedu.java.tasks;

import java.io.PrintStream;

/**
 * ЦЕЛЬ ЗАДАЧИ - разобраться с массивами, строками и циклами в Java.
 * 
 * ЗАДАНИЕ
 * Создать 3-мерный массив строк, причем не равномерный (т.е. не параллепипед с пустующими элементами).
 * 
 * ТРЕБОВАНИЯ
 * Основание массива - прямоугольный равнобедренный треугольник с катетом 10 элементов.
 * Вершины при острых углах имеют координаты [0][0] и [9][9], а вершина при прямом угле - [0][9].
 * Высота в элементах (число значений третьей координаты z) = (x + 1) * (y + 1),
 *   где x и y - индексы точки на треугольнике.
 * Массив должен изначально (в конструкторе) заполняться объектами класса {@link StringBuilder} 
 *  или {@link StringBuffer} или {@link String}, содержащими индексы массива в виде "x,y,z".
 *  
 * @author Andrey Shevtsov
 */
public interface Array3d<T extends CharSequence>
{
	/**
	 * @param x первый индекс элемента (по оси x)
	 * @param y второй индекс элмента (по оси y)
	 * @param z третий индекс элемента (по оси z)
	 * @return элемент, хранимый в массиве по указанным координатам (x, y, z)
	 * (в т.ч. null, если по указанным координатам хранится null)
	 * @throws IndexOutOfBoundsException если позиция, заданная координатами, находится вне массива
	 */
	T get (int x, int y, int z);
	/**
	 * Помещает элемент по указанным координатам в массив
	 * @param x первый индекс элемента (по оси x)
	 * @param y второй индекс элмента (по оси y)
	 * @param z третий индекс элемента (по оси z)
	 * @param value элемент, который следует пометить в массив
	 * @return элемент, хранившийся по указанным координатам - аналогично методу {@link #get(int, int, int)}
	 * @throws IndexOutOfBoundsException если позиция, заданная координатами, находится вне массива
	 */
	T set (int x, int y, int z, T value);
	/**
	 * Печатает массив в указанный поток вывода.
	 * Формат печати следующий:
	 * 
	 *	
	 *		Каждый элемент печатается на новой строке в виде:
	 *		[x][y][z]:array[x][y][z]
	 *		Где x, y, z - соответствующие координаты элемента,
	 *		а array[x][y][z] - сам элемент
	 *	
	 *		Порядок элементов определяется возрастанием числа полученного написанием координат массива в виде xyz.
	 *		То есть, элемент [1][1][0] идет после элемента [1][0][1].
	 *	
	 * 
	 * Метод не является тестируемым, но мы узнаем, если вы его не реализуете.
	 * Проверить корректность метода (для себя, в методе main) вы можете, передав в него System.out.
	 * @param ps {@link PrintStream}, в который надо напечатать массив.
	 * @throws NullPointerException если ps == null
	 */
	void printArray (PrintStream ps);
}